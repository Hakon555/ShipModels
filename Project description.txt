Архитектура проекта и логические элементы

	1)проект сделан на Vue.js с использованием VueRouter, Vuex и VueCLI, все компоненты являются однофайловыми;
	2)все общеиспользуемые данные хранятся во vuex, остальные в самих компонентах;
	3)в проекте делается мокирование сервера, поэтому вместо использования axios, сделана примерно похожая по параметрам функция apiCall;
	4)поскольку сервер мокирован, то данные берутся из массивов созданных под запрос, но часть данных всё же вычисляется из имеющихся "общих" массивов по товарам;
	5)авторизация хранит токен в localStorage, также localStorage используется в мокированном сервере, чтобы авторизация не слетала после перезагрузки;
	6)почти весь vuex разделён на модули, каждый со своей областью видимости;
	7)для быстрого создания модулей при однотипном получения данных написан класс "GetItemsVuex", с использованием которого нужно только заполнить: url запроса и названия действий vuex;
	8)для модальных окон создан компонент, в нём также имеются стили для всех типов модальных окон, например форм;
	9)для адаптивности создан плагин "AdaptivePlugin" для vue;
	10)логика адаптивности следующая:
		1)на уровне страниц предпочтительно используются media для css, но только если разница в стилях незначительна и не ведёт к костылям;
		2)если сделать без костылей невозможно, например когда блоки расположены абсолютно другим спосом, то используется "AdaptivePlugin", создаются контейнеры под каждый экран и в них используются те же компоненты vue,
		но они размещаются в дополнительной разметке;
		3)каждый мелкий компонент может иметь свою адаптивную версию, это сделано чтобы не делать множество компонентов с одинаковой логикой, но разным представлением, для этого в компонент передаются параметры через props;
		
		
		

		
Описание функционала проекта

1)Суть проекта: это личный кабинет пользователя, занимающегося постройкой модели парусного корабля. В личном кабинете имеется информация о посройке модели (текущий статус постройки, статистика),
	а также встроенный интернет магазин для покупки деталей для модели;
1)Проект состоит из 4-х страниц и 3-х подстраниц:
	1)главная;
	2)мой проект;
		1)каталог;
		2)сборка;
		3)статистика;
	3)корзина товаров;
	4)инструкции;
	*)остальные страницы находятся в разработке;
2)В проекте реализована аторизация и регистрация пользователя;
3)Проект является адаптивным, адаптирован под 2 типа эранов: мобильная версия 320-1280, десктопная версия 1280-∞; Адаптивность сделана "mobile first".
4)Описание основного функционала страниц:

Главная:
	На главной странице размещена автоматическая авторизация для удобства тестирования, т.к. почти все страницы видны только авторизованным пользователям;

Мой проект
	1)Это основная страница проекта;
	2)На верхнем уровне выводятся все имеющиеся в приложении проекты (на данный момент их 2) с их общим описанием;
	3)При клике на проект происходит переход к определённому проекту, где выводится та же информация, но дополнительно становится актихной svg-схема проекта;
	4)При клике по деталям на svg-схеме, происходит подсветка выбранной детали и появляется иконка информации;
	5)При клике по иконке информации открывается модальное окно с краткой информацией о детали, компонентом каталога для быстрого добавления в корзину и кнопкой перехода к детали;
	6)Деталь проекта также содержит svg-схему с поддеталями детали для перехода к следующему уровню, и так до самой элементарной части, которая не состоит из других деталей;
	7)На каждой странице детали имеется меню переключения для 3-х типов отображения: каталог(выбран по умолчанию), сборка и статистика;
	8)В типе отображения "каталог" отображается:
		1)статус покупки детали (куплена или нет);
		2)блок добавления детали в корзину;
		3)блок с иконками сообщающими, что у детали есть:
			1)"необходимые" детали того же уровня, что и эта деталь;
			2)"необходимый" крепёж, чтобы эту деталь присоединить к модели;
			При клике на эти иконки открывается модальное окно, предлагающее добавить эти товары в корзину, при клике добавить они добавляются;
	9)В типе отображения "сборка" отображается:
		1)текущий статус сборки, всего таких статуса 3: построена, не построена, сломана;
		2)кнопка изменения статуса детали, которая открывает модальное окно где можно выбрать статус и применить его к детали;
		3)список инструкций привязанных к детали, при клике на инструкцию происходит переход на детальную страницу с инструкцией;
	10)В типе отображения "статистика" отображается:
		1)общая статистика по детали, на данный момент это: затраченное время и сколько потрачено денег;
	11)Для всех типов отображаются блоки "необходимые детали" и "необходимый крепёж" в виде скрытых списков;

Корзина товаров
	1)Выводит список товаров доавленных в корзину, при клике на товар происходит переход на детальную страницу этого товара;
	2)Выводит кличество товаров и их общую сумму;
	3)Кнопка "оформить заказ" ведёт на страницу оформления заказа, но она пока не реализована;
	
Страница инструкции
	1)Выводит текст инструкций;
	
Хедер, футер
	1)выводит информацию о пользователе, либо кнопки войти/зарегистрироваться;
	2)в хедере имеется значок корзины с отображением количества товаров в ней;
